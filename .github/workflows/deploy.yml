name: 🚀 Deploy Fullstack App to GCP VM (Cloud SQL Proxy on VM)

on:
  push:
    branches:
      - produccion

env:
  VM_USER: github-deploy
  VM_HOST: ${{ secrets.VM_HOST }}
  PROJECT_DIR: /home/github-deploy/prospect-app

jobs:
  deploy:
    name: 🔄 Deploy Docker App using Proxy from VM
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GCP_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.VM_HOST }} >> ~/.ssh/known_hosts

      - name: 🚚 Sync Project to VM
        run: |
          rsync -az -e "ssh -i ~/.ssh/id_rsa" ./ ${{ env.VM_USER }}@${{ env.VM_HOST }}:${{ env.PROJECT_DIR }}

      - name: 🐳 Deploy Docker Compose Stack
        run: |
          ssh -i ~/.ssh/id_rsa ${{ env.VM_USER }}@${{ env.VM_HOST }} << 'EOSH'
            set -e
            cd ${{ env.PROJECT_DIR }}

            echo "🔌 Checking if Cloud SQL Proxy is running..."
            if ! pgrep -f "cloud-sql-proxy.*cloud-engineer-test-juanc:us-central1:files" > /dev/null; then
              echo "🚀 Starting Cloud SQL Proxy..."
              nohup cloud-sql-proxy cloud-engineer-test-juanc:us-central1:files \
                --address=0.0.0.0 \
                --port=5432 \
                > cloudsql-proxy.log 2>&1 &
              sleep 3
            else
              echo "✅ Cloud SQL Proxy is already running."
            fi

            echo "🧱 Installing Docker & Compose if needed..."
            if ! command -v docker &> /dev/null; then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
              sudo usermod -aG docker $USER
            fi

            if ! docker compose version &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y docker-compose-plugin
            fi

            echo "🚀 Building and starting app stack..."
            sudo docker compose down
            sudo docker compose up -d --build
          EOSH
