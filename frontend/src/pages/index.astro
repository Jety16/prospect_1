---
const API_URL = "http://localhost:5000"; // Asegúrate de que sea la URL correcta
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <title>Subidor de Archivos PDF</title>
    <style>
      body {
        font-family: sans-serif;
        padding: 2rem;
        background: #f9f9f9;
      }

      .upload-section {
        background: #fff;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        max-width: 600px;
        margin: auto;
      }

      .messages {
        margin-top: 1rem;
        color: green;
      }

      .error {
        color: red;
      }

      ul {
        padding-left: 1rem;
      }

      button {
        margin-top: 1rem;
        padding: 0.6rem 1.2rem;
        font-size: 1rem;
        cursor: pointer;
        border: none;
        border-radius: 6px;
        background-color: #1976d2;
        color: white;
      }

      #dropTablesButton {
        background-color: #e53935;
        margin-left: 1rem;
      }
    </style>
  </head>
  <body>
    <div class="upload-section">
      <h1>Subir archivo PDF</h1>
      <input type="file" id="fileInput" />
      <button id="uploadButton">Subir</button>
      <button id="dropTablesButton">Eliminar Todas las Tablas</button>

      <div class="messages">
        <p id="successMessage"></p>
        <p id="errorMessage" class="error"></p>
      </div>

      <h2>Archivos Subidos</h2>
      <ul id="fileList"></ul>
    </div>

    <script>
      const API_URL = "http://localhost:5000";

      async function uploadFile() {
        const fileInput = document.getElementById("fileInput");
        const file = fileInput.files[0];
        if (!file) {
          showMessage(document.getElementById("errorMessage"), "Selecciona un archivo");
          return;
        }

        const formData = new FormData();
        formData.append("file", file);

        try {
          const response = await fetch(`${API_URL}/upload`, {
            method: "POST",
            body: formData,
          });

          const data = await response.json();
          if (response.ok) {
            showMessage(document.getElementById("successMessage"), data.message || "Archivo subido exitosamente");
            fileInput.value = "";
          } else {
            showMessage(document.getElementById("errorMessage"), data.error || "Error al subir archivo");
          }
        } catch (error) {
          console.error("Error:", error);
          showMessage(document.getElementById("errorMessage"), "Error al subir el archivo");
        }
      }

      async function dropAllTables() {
        if (!confirm("¿Estás seguro que deseas eliminar TODAS las tablas? Esta acción no se puede deshacer.")) {
          return;
        }

        try {
          const response = await fetch(`${API_URL}/drop_all_tables`, {
            method: "POST",
            mode: "cors",
          });

          const data = await response.json();
          if (response.ok) {
            showMessage(document.getElementById("successMessage"), data.message || "Tablas eliminadas exitosamente");
            updateFileList([]); // Limpiar UI
          } else {
            showMessage(document.getElementById("errorMessage"), data.error || "Error al eliminar las tablas");
          }
        } catch (error) {
          console.error("Error al eliminar tablas:", error);
          showMessage(document.getElementById("errorMessage"), "Error de conexión al eliminar las tablas");
        }
      }

      function showMessage(el, message) {
        document.getElementById("successMessage").textContent = "";
        document.getElementById("errorMessage").textContent = "";
        el.textContent = message;
      }

      function updateFileList(files) {
        const list = document.getElementById("fileList");
        list.innerHTML = "";
        files.forEach((file) => {
          const li = document.createElement("li");
          li.textContent = `${file.filename} (nombre: ${file.nombre}, total: ${file.total}, rmu: ${file.rmu})`;
          list.appendChild(li);
        });
      }

      async function fetchFiles() {
        try {
          const res = await fetch(`${API_URL}/files`);
          const files = await res.json();
          updateFileList(files);
        } catch (err) {
          console.error("Error al cargar archivos:", err);
        }
      }

      document.addEventListener("DOMContentLoaded", () => {
        document.getElementById("uploadButton").addEventListener("click", uploadFile);
        document.getElementById("dropTablesButton").addEventListener("click", dropAllTables);
        fetchFiles();
      });
    </script>
  </body>
</html>
