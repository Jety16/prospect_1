<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Prospect - Gestión de Archivos</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f2f2f2;
      margin: 0;
      padding: 0;
    }

    .connection-status {
      padding: 10px;
      text-align: center;
      font-weight: bold;
    }

    .connected {
      background-color: #4caf50;
      color: white;
    }

    .disconnected {
      background-color: #f44336;
      color: white;
    }

    .container {
      max-width: 800px;
      margin: 20px auto;
      padding: 0 15px;
    }

    .upload-section,
    .files-section {
      margin-bottom: 30px;
      padding: 20px;
      border-radius: 6px;
      background-color: white;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    /* Botón y input */
    button {
      background-color: #2196f3;
      color: white;
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 1em;
      transition: background-color 0.2s ease;
      margin-top: 10px;
    }
    button:hover { background-color: #1976d2; }
    button:disabled { background-color: #ccc; cursor: not-allowed; }

    input[type="file"] {
      margin-top: 10px;
      padding: 10px;
      border: 2px dashed #ddd;
      border-radius: 5px;
      width: 100%;
      cursor: pointer;
      transition: border-color 0.2s ease;
    }
    input[type="file"]:hover { border-color: #2196f3; }

    /* Mensajes */
    .error-message,
    .success-message {
      margin-top: 10px;
      padding: 10px;
      border-radius: 5px;
      display: none;
    }
    .error-message {
      background-color: #ffebee;
      color: #c62828;
      border: 1px solid #ffcdd2;
    }
    .success-message {
      background-color: #e8f5e9;
      color: #2e7d32;
      border: 1px solid #c8e6c9;
    }

    /* Lista de archivos subidos */
    .uploaded-file {
      margin-bottom: 20px;
    }
    .file-title {
      font-weight: bold;
      margin-bottom: 10px;
      font-size: 15px;
      border-bottom: 1px solid #ddd;
      padding-bottom: 6px;
    }
    .file-extra div {
      margin: 6px 0;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <div id="connectionStatus" class="connection-status disconnected">Desconectado</div>

  <div class="container">
    <div class="upload-section">
      <h2>Subir Archivo</h2>
      <input type="file" id="fileInput" />
      <button id="uploadButton">Subir</button>
      <div id="errorMessage" class="error-message"></div>
      <div id="successMessage" class="success-message"></div>
    </div>

    <div class="files-section">
      <h2>Archivos Subidos</h2>
      <div id="fileList"></div>
    </div>
  </div>

  <script>
    const API_URL = "";  // pon aquí tu URL base de la API
    let isConnected = false;
    let eventSource = null;

    function updateConnectionStatus(connected) {
      const el = document.getElementById("connectionStatus");
      isConnected = connected;
      if (connected) {
        el.textContent = "Conectado";
        el.className = "connection-status connected";
      } else {
        el.textContent = "Desconectado";
        el.className = "connection-status disconnected";
      }
    }

    function showMessage(el, msg) {
      el.textContent = msg;
      el.style.display = "block";
      setTimeout(() => el.style.display = "none", 5000);
    }

    function updateFileList(files) {
      const container = document.getElementById("fileList");
      container.innerHTML = "";
      files.forEach(file => {
        const wrapper = document.createElement("div");
        wrapper.className = "uploaded-file";

        // Título
        const title = document.createElement("p");
        title.className = "file-title";
        title.textContent = `📄 ${file.filename} · ${new Date(file.uploaded_at).toLocaleString()}`;
        wrapper.appendChild(title);

        // Datos extra
        const extra = document.createElement("div");
        extra.className = "file-extra";
        extra.innerHTML = `
          <div><strong>👤 Nombre:</strong> ${file.nombre || "<em>No disponible</em>"}</div>
          <div><strong>💰 Total:</strong> ${file.total ? `$${file.total}` : "<em>No disponible</em>"}</div>
          <div><strong>📅 RMU:</strong> ${file.rmu || "<em>No disponible</em>"}</div>
        `;
        wrapper.appendChild(extra);

        container.appendChild(wrapper);
      });
    }

    function connectToServer() {
      if (eventSource) eventSource.close();
      eventSource = new EventSource(`${API_URL}/events`);
      eventSource.onopen = () => updateConnectionStatus(true);
      eventSource.onmessage = e => {
        if (e.data !== "{}") {
          try {
            updateFileList(JSON.parse(e.data));
          } catch {}
        }
      };
      eventSource.onerror = () => {
        updateConnectionStatus(false);
        eventSource.close();
        setTimeout(connectToServer, 5000);
      };
    }

    async function uploadFile() {
      if (!isConnected) {
        showMessage(document.getElementById("errorMessage"), "No hay conexión con el servidor");
        return;
      }
      const inFile = document.getElementById("fileInput");
      const err = document.getElementById("errorMessage");
      const ok = document.getElementById("successMessage");
      if (!inFile.files.length) {
        showMessage(err, "Por favor selecciona un archivo");
        return;
      }

      const fd = new FormData();
      fd.append("file", inFile.files[0]);

      try {
        const resp = await fetch(`${API_URL}/upload`, { method: "POST", body: fd });
        const data = await resp.json();
        if (resp.ok) {
          showMessage(ok, data.message || "Archivo subido correctamente");
          inFile.value = "";
        } else {
          showMessage(err, data.error || "Error al subir el archivo");
        }
      } catch {
        showMessage(err, "Error al subir el archivo.");
        updateConnectionStatus(false);
      }
    }

    document.addEventListener("DOMContentLoaded", () => {
      connectToServer();
      document.getElementById("uploadButton").addEventListener("click", uploadFile);
    });
  </script>
</body>
</html>
