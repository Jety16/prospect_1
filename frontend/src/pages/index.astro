<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Prospect - Gestión de Archivos</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f2f2f2;
      margin: 0;
      padding: 0;
    }
    .connection-status {
      padding: 10px;
      margin: 10px;
      border-radius: 5px;
      text-align: center;
      font-weight: bold;
    }
    .connected { background-color: #4caf50; color: white; }
    .disconnected { background-color: #f44336; color: white; }
    .container {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
    }
    .upload-section,
    .files-section {
      margin-bottom: 30px;
      padding: 20px;
      border-radius: 5px;
      background-color: white;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .uploaded-file {
      background: #fff;
      border-radius: 6px;
      padding: 15px;
      margin-bottom: 20px;
      box-shadow: 0 1px 3px rgba(0,0,0,0.08);
      font-size: 14px;
      line-height: 1.4;
    }
    .file-header {
      font-weight: bold;
      margin-bottom: 6px;
    }
    .separator {
      text-align: center;
      color: #ccc;
      margin: 8px 0;
    }
    .file-extra-lines div {
      margin: 4px 0;
    }
    /* Botones y mensajes (sin cambios) */
    button {
      background-color: #2196f3;
      color: white;
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-top: 10px;
      font-size: 1em;
      transition: background-color 0.2s ease;
    }
    button:hover { background-color: #1976d2; }
    button:disabled { background-color: #ccc; cursor: not-allowed; }
    input[type="file"] {
      margin-top: 10px;
      padding: 10px;
      border: 2px dashed #ddd;
      border-radius: 5px;
      width: 100%;
      cursor: pointer;
      transition: border-color 0.2s ease;
    }
    input[type="file"]:hover { border-color: #2196f3; }
    .error-message, .success-message {
      margin-top: 10px;
      padding: 10px;
      border-radius: 5px;
      display: none;
    }
    .error-message {
      background-color: #ffebee;
      color: #c62828;
      border: 1px solid #ffcdd2;
    }
    .success-message {
      background-color: #e8f5e9;
      color: #2e7d32;
      border: 1px solid #c8e6c9;
    }
  </style>
</head>
<body>
  <div id="connectionStatus" class="connection-status disconnected">Desconectado</div>

  <div class="container">
    <div class="upload-section">
      <h2>Subir Archivo</h2>
      <input type="file" id="fileInput" />
      <button id="uploadButton">Subir</button>
      <div id="errorMessage" class="error-message"></div>
      <div id="successMessage" class="success-message"></div>
    </div>

    <div class="files-section">
      <h2>Archivos Subidos</h2>
      <div id="fileList"></div>
    </div>
  </div>

  <script>
    const API_URL = "";  // Ajusta aquí si corre en otro host/puerto

    let isConnected = false, eventSource = null;

    function updateConnectionStatus(connected) {
      const el = document.getElementById("connectionStatus");
      isConnected = connected;
      el.textContent = connected ? "Conectado" : "Desconectado";
      el.className = "connection-status " + (connected ? "connected" : "disconnected");
    }

    function showMessage(el, msg) {
      el.textContent = msg;
      el.style.display = "block";
      setTimeout(() => el.style.display = "none", 5000);
    }

    function updateFileList(files) {
      const list = document.getElementById("fileList");
      list.innerHTML = "";

      files.forEach(file => {
        const wr = document.createElement("div");
        wr.className = "uploaded-file";

        // Cabecera con nombre y fecha
        const hdr = document.createElement("div");
        hdr.className = "file-header";
        hdr.textContent = `📄 ${file.filename} · ${new Date(file.uploaded_at).toLocaleString()}`;
        wr.appendChild(hdr);

        // Separador
        const sep = document.createElement("div");
        sep.className = "separator";
        sep.textContent = "────────────────────────────";
        wr.appendChild(sep);

        // Líneas extra
        const extra = document.createElement("div");
        extra.className = "file-extra-lines";
        extra.innerHTML = `
          <div>👤 Nombre: ${file.nombre || "<em>No disponible</em>"}</div>
          <div>💰 Total: ${file.total ? `$${file.total}` : "<em>No disponible</em>"}</div>
          <div>📅 RMU: ${file.rmu || "<em>No disponible</em>"}</div>
          <div>🏢 CMO: ${file.cmo || "<em>No disponible</em>"}</div>
        `;
        wr.appendChild(extra);

        list.appendChild(wr);
      });
    }

    function connectToServer() {
      if (eventSource) eventSource.close();
      eventSource = new EventSource(`${API_URL}/events`);
      eventSource.onopen = () => updateConnectionStatus(true);
      eventSource.onmessage = e => {
        if (e.data !== "{}") {
          try { updateFileList(JSON.parse(e.data)); }
          catch {}
        }
      };
      eventSource.onerror = () => {
        updateConnectionStatus(false);
        eventSource.close();
        setTimeout(connectToServer, 5000);
      };
    }

    async function uploadFile() {
      if (!isConnected) {
        showMessage(document.getElementById("errorMessage"), "No hay conexión con el servidor");
        return;
      }
      const inp = document.getElementById("fileInput");
      const err = document.getElementById("errorMessage");
      const ok = document.getElementById("successMessage");
      if (!inp.files.length) { showMessage(err, "Por favor selecciona un archivo"); return; }

      const fd = new FormData();
      fd.append("file", inp.files[0]);

      try {
        const res = await fetch(`${API_URL}/upload`, { method: "POST", body: fd });
        const data = await res.json();
        if (res.ok) {
          showMessage(ok, data.message || "Archivo subido correctamente");
          inp.value = "";
        } else {
          showMessage(err, data.error || "Error al subir el archivo");
        }
      } catch {
        showMessage(err, "Error al subir el archivo.");
        updateConnectionStatus(false);
      }
    }

    document.addEventListener("DOMContentLoaded", () => {
      connectToServer();
      document.getElementById("uploadButton").addEventListener("click", uploadFile);
    });
  </script>
</body>
</html>
